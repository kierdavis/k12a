Offset  Label   Instruction     Action          Opcode (binary)         Opcode (hex)
------- ------- --------------- --------------- ----------------------- ------------
0000            mov A, 0x00     A <- hi(str)    0001 1111 0000 0000     1F00
0002            mov C, A        C <- A          1000 1000 0000 0000     8800
0004            mov A, 0x28     A <- lo(str)    0001 1111 0010 1000     1F28
0006            mov D, A        D <- A          1100 1000 0000 0000     C800
0008    loop:   ld              A <- [CD]       0010 0000 0000 0000     2000
000A            sknz            if zero:        1010 0000 0000 0000     A000
000C            rjmp halt         jump to halt  1100 0000 0000 1011     C00B
000E            std 0           $0 <- A         0111 0000 0000 0000     7000
0010    wait:   in 4            A <- IO[4]      0001 0000 0000 0100     1004
0012            mov A, A&0x40   A <- A & 0x40   0001 1001 0100 0000     1940
0014            skz             if nonzero:     1000 0000 0000 0000     8000
0016            rjmp wait         jump to wait  1100 0111 1111 1100     C7FC
0018            ldd 0           A <- $0         0011 0000 0000 0000     3000
001A            out 6           IO[6] <- A      0101 0000 0000 0110     5006
001C            in 4            A <- IO[4]      0001 0000 0000 0100     1004
001E            mov A, A|0x40   A <- A | 0x40   0001 1010 0100 0000     1A40
0020            out 4           IO[4] <- A      0101 0000 0000 0100     5004
0022            inc             CD <- CD + 1    0000 0000 0000 0000     0000
0024            rjmp loop       jump to loop    1100 0111 1111 0001     C7F1
0026    halt:   halt            halt execution  1111 0000 0000 0000     F000
0028    str:    @byte 0x48      'H'             0100 1000               48
0029            @byte 0x65      'e'             0110 0101               65
002A            @byte 0x6c      'l'             0110 1100               6c
002B            @byte 0x6c      'l'             0110 1100               6c
002C            @byte 0x6f      'o'             0110 1111               6f
002D            @byte 0x2c      ','             0010 1100               2c
002E            @byte 0x20      ' '             0010 0000               20
002F            @byte 0x77      'w'             0111 0111               77
0030            @byte 0x6f      'o'             0110 1111               6f
0031            @byte 0x72      'r'             0111 0010               72
0032            @byte 0x6c      'l'             0110 1100               6c
0033            @byte 0x64      'd'             0110 0100               64
0034            @byte 0x21      '!'             0010 0001               21
0035            @byte 0x00      end of string   0000 0000               00
